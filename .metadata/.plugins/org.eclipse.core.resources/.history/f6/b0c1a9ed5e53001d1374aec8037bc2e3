package Talk1;

import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Color;
import java.awt.Label;
import java.awt.Panel;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class TalkClient extends MFrame implements ActionListener, Runnable{

	Button btn1, btn2;
	TextField tf1, tf2;
	TextArea ta;
	Panel p1, p2;
	BufferedReader in;
	PrintWriter out;
	String id;
	int port = 8006;
	
	
	//금지어 선언
	String str[] = {"바보","개새끼","새끼","자바","java"};//필드
	
	public TalkClient(BufferedReader in, PrintWriter out, String id) {
		super(350,400);
		setTitle("Talk 1.0");
		p1 = new Panel();
		p1.setBackground(new Color(100,200,100));
		p1.add(new Label ("HOST ", Label.CENTER));
		p1.add(tf1 = new TextField("127.0.0.1",25));
		p1.add(btn1 = new Button("Connect"));
		
		p2 = new Panel();
		p2.setBackground(new Color(100,200,100));
		p2.add(tf2 = new TextField("", 25));
		p2.add(btn2 = new Button("SEND"));
		
		tf1.addActionListener(this);
		tf2.addActionListener(this);
		btn1.addActionListener(this);
		btn2.addActionListener(this);
		
		add(p1,BorderLayout.NORTH);
		add(ta=new TextArea());
		add(p2,BorderLayout.SOUTH);
		validate();
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj = e.getSource();
		if(obj==tf1||obj==btn1) {
			connect(tf1.getText().trim());
			tf1.setEnabled(false);
			btn1.setEnabled(false);
			tf2.requestFocus();
		}else if(obj==tf2||obj==btn2) {
			String str = tf2.getText().trim();
			if(str.length()==0)
				return;
			if(filterStr(str)) {
				ta.append("입력하신 글자는 금지어가 포함 되어있습니다.");
				tf2.setText("");
				tf2.requestFocus();
				return;
			}
			
			if(id==null) {
				id = str;
				setTitle(getTitle() + "[" + id + "]");
				ta.setText("채팅을 시작합니다.\n");
			}
			
			out.println(str);
			tf2.setText("");
			tf2.requestFocus();
		
		}
	}//--actionPerformed
	
	//금지어 필터링
	public boolean filterStr(String target) {
		boolean flag = false;
		for(int i=0; i<str.length; i++) {
			if(target.contains(str[i])) {
				flag=true;
				break;
			}
		}
		return flag;
	}
	
	@Override
	//서버로 부터 메세지가 들어오면 반응하는 기능
	public void run() {
		try {
			while(true) {
				//서버에서 메세지 전달되면 ta에 append
				ta.append(in.readLine() + "\n");
				tf2.requestFocus();//채팅 입력창
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}//--run
	
	public void connect(String host) {
		try {
		Socket sock = new Socket(host, port);
		in = new BufferedReader(
				new InputStreamReader(sock.getInputStream()));
		out = new PrintWriter(sock.getOutputStream(),true);
//		서버 시작
		Thread t = new Thread(this);
		t.start();//run 메소드 호출
		} catch (Exception e) {
			e.printStackTrace();
		}
	}//--connect
	
	public static void main(String[] args) {
		new TalkClient();
	}
}




















